# This is a basic workflow to help you get started with Actions

name: build-reen-rootfs

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-reen-rootfs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # 
      - name: debug-dir
        run: pwd

      - name: debug-content
        run: ls -lah

      - name: docker build
        run: docker build $GITHUB_WORKSPACE --tag rootfs-image

      - name: run & export
        run: docker run -d --name reen-rootfs rootfs-image && docker export reen-rootfs > reen_rootfs.tar.gz

      - uses: actions/upload-artifact@v2
        with:
          name: reen-rootfs-artifact
          path: reen_rootfs.tar.gz
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./reen_rootfs.tar.gz
          asset_name: reen_rootfs.tar.gz
          asset_content_type: application/gzip